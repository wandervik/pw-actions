name: S3 Continuous Deployment to dev

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set version
        id: set_var
        run: |
          content=`cat ./package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "prev_version=${{fromJson(steps.set_var.outputs.packageJson).version}}" >> $GITHUB_ENV



      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          minor-wording:  'add,Adds,new,feat,minor'
          major-wording:  'MAJOR,cut-major'
          patch-wording:  'patch,fixes'
          rc-wording:     'RELEASE,alpha'
          commit-message: 'Bumped version number. Current version: {{version}}'

      - name: Set new version
        id: set_new_var
        run: |
          content=`cat ./package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "new_version=${{fromJson(steps.set_new_var.outputs.packageJson).version}}" >> $GITHUB_ENV

      # - name: NPM build
      #   run: |
      #   uses: actions/setup-node@master
      #   with:
      #     node-version: 12
      # - run: npm run buildCDN:dev

# Debug msg versions:
# echo "old version is - ${{ env.prev_version }} and new version is - ${{ env.new_version }}"

  deploy:
    runs-on: ubuntu-latest
    environment: dev

    env:
      # aws-cdn:
      # aws-s3-bucket:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: eu-central-1
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # - name: Check if remote repositiry is exist

      - name: Push to bucket
        run: |
          aws s3 cp dist/* s3://playwire-mobile-test/${{ env.new_version }} --recursive


    #       const path = typeof globals.featurePath === 'undefined' ? `s3://${globals.bucket}/${globals.newVersion}/` : `s3://${globals.bucket}/`
    # run(`s3cmd put dist/* -r --acl-public ${path}`)

      # - name: Invalidate CDN
      #   uses: chetan/invalidate-cloudfront-action@v2
      #   env:
      #     DISTRIBUTION:
      #     PATHS: "/*"
      #     AWS_REGION: "eu-central-1"
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}